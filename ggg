#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Oct 19 23:26:43 2018

@author: eejups
"""

import sys
import pandas as pd
import numpy as np
from datetime import datetime
import time
import multiprocessing
import webbrowser
import MySQLdb

db = MySQLdv.connect(host="10.90.1/77", user ="ghtsql", passwd ="cct1ng", db = "GHT_GG")
cursor = db.cursor()

def Download(Name):
    csv_url = 'http://quer1a' + Name + ''
    chrome_path = 'C://Program Files (x86)/Google/Chrome/Applicaiton/chrome.exe %s'
    webbrowser.get(chrome_path).open_new_tab(csv_url)
    
def FindDivNames(currentname):
    IsWrong = 1
    try:
        OldPath = "select SecurityID, Price from All_Vols_copy where SecurityID = " + str(currentname['SecurityID]) + " and Date = 20180727"
        OldPrice = pd.read_sql_query(OldPath, db)
        OldPrice = round(float(OOldPrice.loc[0,'Price']),2)
        newPath = 'C:\\Users\\eejup\\' + str(currentname['Name']) + ".csv"
        Newfile = pd.ead_csv(newPath)
        
        NewPrice = round(float(Newfile[Newfile['Date'] == '2016-07-27']['Adj Close']),2)
        if NewPrice == OldPrice:
            IsWrong = 0
    except Exception:
        p = multiprocessing.Process(target=Download, name = "Download", args=(10,))
        p.start()
        Name = str(currentname['Name'])
        Download(Name)
        time.sleep(5)
        p.terminate()
        p.join()
        if currentname['fail'] < 2:
            currentname['fail'] = 5
            FindDivNames(currentname)
        pass
    return IsWrong

def getcatVOLZ(data,stock):
    stockcheck = data.iloc[0,0]
    date = data.iloc[0,1]
    for date in data['Date'].unique():
        if stockcheck != stock:
            print('broken')
            break
        if len(data) < 7:
            print('short')
            break
        start = data.iloc[data.Date == date) & (data.SecurityID == stock)].index[0] + 5
        last5 = data.loc[start-4:start,"Rt2"]
        data.loc[start,"U_5_CC"] = 100*np.sqrt(np.sum(last5)*252/len(last5))
        if (5 + data.loc[(data.Date == date) & (data.SecurityID == stock), 'Price'].index[0]) > 9:
            last10 = data.loc[start-9:start,'Rt2']
            data.loc[start,"U_10_CC"] = 100*np.sqrt(np.sum(last10)*252/len(last10))
        if (5 + data.loc[(data.Date == date) & (data.SecurityID == stock), 'Price'].index[0]) > 20:
            last21 = data.loc[start-20:start,'Rt2']
            data.loc[start,"U_21_CC"] = 100*np.sqrt(np.sum(last21)*252/len(last21))
        if (5 + data.loc[(data.Date == date) & (data.SecurityID == stock), 'Price'].index[0]) > 62:
            last63 = data.loc[start-9:start,'Rt2']
            data.loc[start,"U_63_CC"] = 100*np.sqrt(np.sum(last63)*252/len(last63))
        if (5 + data.loc[(data.Date == date) & (data.SecurityID == stock), 'Price'].index[0]) > 125:
            last126 = data.loc[start-9:start,'Rt2']
            data.loc[start,"U_126_CC"] = 100*np.sqrt(np.sum(last126)*252/len(last126))
        if (5 + data.loc[(data.Date == date) & (data.SecurityID == stock), 'Price'].index[0]) > 251:
            last252 = data.loc[start-9:start,'Rt2']
            data.loc[start,"U_252_CC"] = 100*np.sqrt(np.sum(last252)*252/len(last252))
           
        last5 = data.loc[(data.index >= start-4) & (data.index <= start) & (data.Event == 0),"Rt2"]
        data.loc[start,"NetEarn_5_CC"] = 100*np.sqrt(np.sum(last5)*252/len(last5))
        if (5 + data.loc[(data.Date == date) & (data.SecurityID == stock), 'Price'].index[0]) > 9:
            last10 = data.loc[(data.index >= start-9) & (data.index <= start) & (data.Event == 0),'Rt2']
            data.loc[start,"NetEarn_10_CC"] = 100*np.sqrt(np.sum(last10)*252/len(last10))
        if (5 + data.loc[(data.Date == date) & (data.SecurityID == stock), 'Price'].index[0]) > 20:
            last21 = data.loc[(data.index >= start-20) & (data.index <= start) & (data.Event == 0),'Rt2']
            data.loc[start,"NetEarn_21_CC"] = 100*np.sqrt(np.sum(last21)*252/len(last21))
        if (5 + data.loc[(data.Date == date) & (data.SecurityID == stock), 'Price'].index[0]) > 62:
            last63 = data.loc[(data.index >= start-9) & (data.index <= start) & (data.Event == 0),'Rt2']
            data.loc[start,"NetEarn_63_CC"] = 100*np.sqrt(np.sum(last63)*252/len(last63))
        if (5 + data.loc[(data.Date == date) & (data.SecurityID == stock), 'Price'].index[0]) > 125:
            last126 = data.loc[(data.index >= start-9) & (data.index <= start) & (data.Event == 0),'Rt2']
            data.loc[start,"NetEarn_126_CC"] = 100*np.sqrt(np.sum(last126)*252/len(last126))
        if (5 + data.loc[(data.Date == date) & (data.SecurityID == stock), 'Price'].index[0]) > 251:
            last252 = data.loc[(data.index >= start-9) & (data.index <= start) & (data.Event == 0),'Rt2']
            data.loc[start,"NetEarn_252_CC"] = 100*np.sqrt(np.sum(last252)*252/len(last252))
            
        start = start + 1
        stockcheck = data.loc[start-5,"SecurityID"]
        if start >= len(data):
            print("break")
            break
    return data

if _name_== "__main__":
    print(1)
    print (datetime.now())
    
    StockKeys = pd.read_sql_query("Select * from StockKeys", db)
    hey = StockKeys['Name'].str.replace('/','-')
    StockKeys['Name'] = hey
    AllVolKeys = pd.read_sql_query("select Name, max(Date), All_Vols_copy.SecurityID join StockKeys group by SecurityID",db)
    maxDate = max(AllVolKeys['max(Date)'])
    Names = pd.DataFrame(AllVolKeys[AllVolKeys['max(Date)'] == maxDate]['Name'])
    Names = Names['Name'].str.replace('/','-')
    AllVolKeys['fail'] = 0
    AllVolKeys['Name'] = AllVolKeys['Name'].str.replace('/','-')

    print(2)
    print(datetime.now())
    
    Names = pd.Dataframe(Names.reset_index(drop = True))
    
    for Name in Names['Name'].unique():
        p.multiprocessing.Process(target=Download, name = "Download", args(10,))
        p.start()
        Download(Name)
        time.sleep(4)
        p.terminate()
        p.join()
        
    DivNames = pd.DataFrame(columns = ['Name'])
    for x in range(len(AllVolsKeys)):
        IsWrong == 1:
            DivNames = DivNames.append(AllVolKeys.loc[x,:])
            
    DivNames['SecrityID'] = DivnNames['SecurityID'].astype(int)
    DivNames['max(Date)'] = DivnNames['max(Date)'].astype(int)    
        
        
